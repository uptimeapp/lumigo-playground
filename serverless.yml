service: lumigo-playground

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - '@wingsy/serverless-plugin-service-gateway'
  - '@wingsy/serverless-plugin-sqs-from-sns'
  - serverless-pseudo-parameters
  - serverless-export-env

custom:
  serviceGateway:
    apiId: ${cf:${self:provider.stage}-api-gateway.ApiId}
    parentId: ${cf:${self:provider.stage}-api-gateway.RootResourceId}
provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  stage: ${opt:stage, env:WINGSY_STAGE, env:USER}
  stackName: ${self:provider.stage}-${self:service}  
  environment:
    DYNAMODB_LUMIGO_TABLE: ${self:provider.stackName}-lumigo
    SNS_TOPIC: ${self:provider.stackName}
    SNS_TOPIC_ARN: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:provider.environment.SNS_TOPIC}
    LUMIGO_TOKEN: ${env:LUMIGO_TOKEN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:provider.stackName}-*"
    - Effect: Allow
      Action: 
        - sns:Publish
      Resource: ${self:provider.environment.SNS_TOPIC_ARN}
functions:
  noop:
    handler: dist/noop.handler
    environment:
      MESSAGE: 'i am the /noop api request handler'
    events:
      - http:
          path: /noop
          method: get          
          cors: true
  dynamo:
    handler: dist/dynamo.handler
    events:
      - http:
          path: /dynamo
          method: get          
          cors: true
  sns:
    handler: dist/sns.handler
    events:
      - http:
          path: /sns
          method: get          
          cors: true          
  clock:
    handler: dist/clock.handler
    events:
      - http:
          path: /clock
          method: get          
          cors: true                    
  dynamoStream:
    handler: dist/noop.handler
    environment:
      MESSAGE: 'i am the dynamo db stream handler'
    events:
      - stream:
          enabled: true
          type: dynamodb
          arn: !GetAtt LumigoDynamoDbTable.StreamArn
          batchSize: 10
          startingPosition: TRIM_HORIZON
  onSnsMessage:
    handler: dist/noop.handler
    environment:
      MESSAGE: 'i am the sns message handler'
    events:
      - sns: ${self:provider.environment.SNS_TOPIC}
  onSnsMessage2:
    handler: dist/noop.handler
    environment:
      MESSAGE: 'i am the sns message handler2'
    events:
      - sns: ${self:provider.environment.SNS_TOPIC}            
  onSnsViaSqs:
    handler: dist/noop.handler
    environment:
      MESSAGE: 'i am the sns-from-sqs message handler'
    events:
        - sqs-from-sns:
            topicArn: ${self:provider.environment.SNS_TOPIC_ARN}
  onSnsToClock:
    handler: dist/clock.handler
    events:
      - sns: ${self:provider.environment.SNS_TOPIC}                  
  onSnsToDynamo:
    handler: dist/dynamo.handler
    events:
      - sns: ${self:provider.environment.SNS_TOPIC}                  
  snsFromSqs:
    handler: dist/sns-from-sqs.handler
    events:
      - sqs-from-sns:
          topicArn: ${self:provider.environment.SNS_TOPIC_ARN}

resources:
  - ${file(resources/lumigo-table.yml)}